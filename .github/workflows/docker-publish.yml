name: Docker

on:
  push:
    branches:
      - main     # 当 `main` 分支有 push 时触发
    tags:
      - 'v*.*.*'  # 当有新的 tag 时触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # 设置 Buildx 以支持多架构构建
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 登录 GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 提取 Docker 镜像的元数据（标签、名称等）
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha
            type=ref,event=tag
          flavor: |  # 添加 flavor 以支持更灵活的标签生成
            latest=true

      # 构建并推送多架构 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.9.0 
        id: build-and-push
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.repository }}  # 添加 scope 以优化缓存共享
          cache-to: type=gha,mode=max,scope=${{ github.repository }}

      # 使用 cosign 签名发布的 Docker 镜像
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          set -e  # 确保脚本在出错时立即退出
          images=""
          for tag in $(echo $TAGS | tr ',' ' '); do
            images+="$tag@$DIGEST "
          done
          echo "Signing images: ${images}"  # 添加调试输出
          cosign sign --yes ${images} || { echo "Cosign signing failed"; exit 1; }  # 添加错误处理